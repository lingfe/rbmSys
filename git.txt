111111 
学习git地址:
GitHub:	http://www.liaoxuefeng.com/wiki/0013739516305929606dd18361248578c67b8067c8c017b000/0013752340242354807e192f02a44359908df8a5643103a000

码云:	http://git.mydoc.io/?t=154712
4444

--1.git 创建版本库，使用git init命令将当前目录作为git版本库（注意，文件目录不能是中文，目录必须是一个空目录）
$ mkdir learngit //创建版本库目录
$ cd learngit	 //进入目录	
$ pwd			 //输出当前路径
/Users/michael/learngit

git init		

--2.git 单个文件提交
git add file*.xxx ...

git add 的各种区别:

git add -A   // 添加所有改动

git add *     // 添加新建文件和修改，但是不包括删除

git add .    // 添加新建文件和修改，但是不包括删除

git add -u   // 添加修改和删除，但是不包括新建文件

--3.git 多个文件提交,-m "说明"
git commit -m "xxx"

在 commit 前撤销 add:

git reset <file> // 撤销提交单独文件

git reset        // unstage all due changes

add/commit 前撤销对文件的修改:

git checkout -- README.md  // 注意, add添加后(同commit提交后)就无法通过这种方式撤销修改

--4.查看版本库状态git status
$ git status
# On branch master
# Changes not staged for commit:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#    modified:   readme.txt
#
no changes added to commit (use "git add" and/or "git commit -a")
//命令可以让我们时刻掌握仓库当前的状态，
//上面的命令告诉我们，readme.txt被修改过了，但还没有准备提交的修改。

--5.git diff查看文件需改内容
git diff xxx.xxx


--6.git log命令查看日志，版本回放
git log
git log --pretty=oneline  //简化


--7.我们要把当前版本“append GPL”回退到上一个版本“add distributed”，就可以使用git reset命令：
git reset --hard HEAD^

--8.查看命令纪录
git reflog   //Git提供了一个命令Git提供了一个命令git reflog用来记录你的每一次命令：


--9.查看工作区和暂存区的区别
用git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别：


--10.撤销工作区的修改
$ git checkout -- readme.txt
命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。

总之，就是让这个文件回到最近一次git commit或git add时的状态。


--11.撤销暂存区的修改
Git同样告诉我们，用命令git reset HEAD file可以把暂存区的修改撤销掉（unstage），重新放回工作区：

$ git reset HEAD readme.txt
Unstaged changes after reset:
M       readme.txt
git reset命令既可以回退版本，也可以把暂存区的修改回退到工作区。当我们用HEAD时，表示最新的版本。

--12.删除工作区的文件
$ rm test.txt

--13.创建远程仓库密匙
$ ssh-keygen -t rsa -C "13068326391@163.com"




git:
name:lijie
email：13068326391@163

githubl
user：lingfe
email：13068326391@163.com
pwd：lingfe20170511

ssh key:lingfe-ssh-20170511


马云:
https://git.oschina.net/shuimuyuan/shuimuyun_git.git
git@git.oschina.net:shuimuyun/shuimuyun_git.git

$ git remote add shuimuyun_mayun_origin git@git.oschina.net:shuimuyun/shuimuyun_git.git
$ git push -u shuimuyun_mayun_origin master



github:
https://github.com/lingfe/shuimuyun.git
git@github.com:lingfe/shuimuyun.git

$ git remote add shuimuyun_origin git@github.com:lingfe/shuimuyun_git.git
$ git push -u shuimuyun_origin master


--创建远程库
$ git remote add shuimuyun_origin git@github.com:lingfe/shuimuyun_git.git
远程库的名字就是：	shuimuyun_origin
GitHub账户名：		lingfe
本地版本库：		shuimuyun_git.git

$ git push -u shuimuyun_origin master
The authenticity of host 'github.com (192.30.253.112)' can't be established.
RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,192.30.253.112' (RSA) to the list of known hosts.
Counting objects: 9, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (9/9), 2.07 KiB | 0 bytes/s, done.
Total 9 (delta 2), reused 0 (delta 0)
remote: Resolving deltas: 100% (2/2), done.
To github.com:lingfe/shuimuyun_git.git
 * [new branch]      master -> master
Branch master set up to track remote branch master from shuimuyun_origin.


--本地推送到远程库
$ git push -u shuimuyun_origin master
远程库的名字就是：	shuimuyun_origin

从现在起，只要本地作了提交，就可以通过命令：
$ git push shuimuyun_origin master
把本地master分支的最新修改推送至GitHub，现在，你就拥有了真正的分布式版本库！

